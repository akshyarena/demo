package Position2.ArenaSuite;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;
import position2.arenasuite.pageobjects.DeliveryDashboardPage;
import position2.arenasuite.pageobjects.LoginPage;

public class Login {

	WebDriver driver;
	DeliveryDashboardPage deliveryDashboardPage;

	@BeforeClass
	public void setUp() {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("https://test.thearena.ai/");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	}

	// Test case for Login to Arena with Valid username and password
	@Test
	public void validLogin() {
		LoginPage loginPage = new LoginPage(driver);
		loginPage.loginArena();

	}

	// Validating the page after successful login like assertion checks
	@Test(dependsOnMethods = "validLogin")
	public void assertionCheck() {
		deliveryDashboardPage = new DeliveryDashboardPage(driver);
		String expectedSubstring = "https://test.thearena.ai";
		deliveryDashboardPage.verifyElementsPresentOnDashboard();
		deliveryDashboardPage.veriyUrl(expectedSubstring);

	}

	// Saving a filter and checking whether the filter has been created successfully
	@Test(dependsOnMethods = "assertionCheck")
	public void saveFilterCreation() throws InterruptedException {
		deliveryDashboardPage = new DeliveryDashboardPage(driver);
		deliveryDashboardPage.createAndSaveFilter("Magnum (CreditStrong)", "Filtername 1");
		deliveryDashboardPage.verifyFilterPresent("Filtername 1");

	}
	
	@Test(dependsOnMethods="saveFilterCreation")
	public void addTimeEntry()
	{
	deliveryDashboardPage = new DeliveryDashboardPage(driver);
		deliveryDashboardPage.addTimeEntry("NEW DELIVERABL 12345");
		
	}
	
	

	// @AfterClass
	public void tearDown() {
		if (driver != null) {
			driver.quit();
		}
	}
}
